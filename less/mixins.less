//
// Mixins
// --------------------------------------------------

// Utilities
// -------------------------

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
.clearfix() {
  &:before,
  &:after {
    content: " "; /* 1 */
    display: table; /* 2 */
  }
  &:after {
    clear: both;
  }
}

// Webkit-style focus
.tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Center-align a block level element
.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Sizing shortcuts
.size(@width, @height) {
  width: @width;
  height: @height;
}
.square(@size) {
  .size(@size, @size);
}

// Placeholder text
.placeholder(@color: @input-color-placeholder) {
  &:-moz-placeholder            { color: @color; } // Firefox 4-18
  &::-moz-placeholder           { color: @color; } // Firefox 19+
  &:-ms-input-placeholder       { color: @color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: @color; } // Safari and Chrome
}

// Text overflow
// Requires inline-block or block for proper styling
.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// CSS3 PROPERTIES
// --------------------------------------------------

// All sides border-radius
.border-radius(@radius) {
  border-radius: @radius;
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
}

// Single side border-radius
.border-top-radius(@radius) {
  border-top-right-radius: @radius;
  border-top-left-radius: @radius;
}
.border-right-radius(@radius) {
  border-bottom-right-radius: @radius;
  border-top-right-radius: @radius;
}
.border-bottom-radius(@radius) {
  border-bottom-right-radius: @radius;
  border-bottom-left-radius: @radius;
}
.border-left-radius(@radius) {
  border-bottom-left-radius: @radius;
  border-top-left-radius: @radius;
}

// Box sizing
.box-sizing(@boxmodel) {
  -webkit-box-sizing: @boxmodel;
  -moz-box-sizing: @boxmodel;
  box-sizing: @boxmodel;
}

// Grid System
// --------------------------------------------------

@grid-content-width:  @grid-total-width - @grid-gutter-width;
@grid-column-width: @grid-total-width / @grid-columns - @grid-gutter-width;

// Centered grid element
.grid-fixed() {
  width: @grid-total-width;
  .centered();
  .clearfix();
}

// Creates a wrapper for a series of columns
.make-row() {
  // Then clear the floated columns
  .clearfix();
}

// Generate the columns
.make-column(@column) {
  float: left;
  // Prevent columns from collapsing when empty
  min-height: 1px;
  _display: inline;
  margin-left: @grid-gutter-width / 2;
  margin-right: @grid-gutter-width / 2;
  width: @grid-column-width * @column + (@column - 1) * @grid-gutter-width;
}

// Generate the column offsets
.make-column-offset(@column) {
  margin-left: @grid-total-width / @grid-columns * @column + @grid-gutter-width / 2;
}

// Creates a wrapper for a series of columns
.make-row-fluid() {
  // Then clear the floated columns
  .clearfix();
  width: 100%;
}

// Generate the columns
.make-column-fluid(@column) {
  display: block;
  _display: inline;
  margin-right: 0;
  margin-left: percentage(@grid-gutter-width / @grid-content-width);
  width: percentage((@grid-column-width * @column + (@column - 1) * @grid-gutter-width) / @grid-content-width);
}

// Generate the column offsets
.make-column-fluid-offset(@column) {
  margin-left: percentage((@grid-column-width * @column + (@column + 1) * @grid-gutter-width) / @grid-content-width);
}

// OTHERS
// --------------------------------------------------

// Opacity
.opacity(@opacity) {
  opacity: @opacity;
  // IE8 filter
  @opacity-ie: (@opacity * 100);
  filter: ~"alpha(opacity=@{opacity-ie})";
}

.centered() {
  margin-left: auto;
  margin-right: auto;
}
